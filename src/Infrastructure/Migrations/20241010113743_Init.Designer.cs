// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241010113743_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsIncome")
                        .HasColumnType("boolean");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameRu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameUz")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            IsIncome = false,
                            NameEn = "Food",
                            NameRu = "Продукты",
                            NameUz = "Oziq-ovqat"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            IsIncome = false,
                            NameEn = "Transport",
                            NameRu = "Транспорт",
                            NameUz = "Transport"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            IsIncome = false,
                            NameEn = "Utilities",
                            NameRu = "Коммунальные услуги",
                            NameUz = "Kommunal xizmatlar"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            IsIncome = false,
                            NameEn = "Rent",
                            NameRu = "Аренда жилья",
                            NameUz = "Uy-joy ijarasi"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            IsIncome = false,
                            NameEn = "Health",
                            NameRu = "Здоровье и медицина",
                            NameUz = "Sog'liq va tibbiyot"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            IsIncome = false,
                            NameEn = "Entertainment",
                            NameRu = "Развлечения",
                            NameUz = "O'yin-kulgi"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            IsIncome = false,
                            NameEn = "Education",
                            NameRu = "Образование",
                            NameUz = "Ta'lim"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            IsIncome = false,
                            NameEn = "Loan Payments",
                            NameRu = "Кредитные выплаты",
                            NameUz = "Kredit to'lovlari"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            IsIncome = false,
                            NameEn = "Clothing",
                            NameRu = "Одежда",
                            NameUz = "Kiyim-kechak"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            IsIncome = false,
                            NameEn = "Travel",
                            NameRu = "Путешествия",
                            NameUz = "Sayohat"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            IsIncome = true,
                            NameEn = "Salary",
                            NameRu = "Зарплата",
                            NameUz = "Oylik maosh"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            IsIncome = true,
                            NameEn = "Bonus",
                            NameRu = "Бонус",
                            NameUz = "Bonus"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            IsIncome = true,
                            NameEn = "Additional Income",
                            NameRu = "Дополнительный доход",
                            NameUz = "Qo'shimcha daromad"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            IsIncome = true,
                            NameEn = "Investment Income",
                            NameRu = "Доход от инвестиций",
                            NameUz = "Investitsiya daromadi"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2024, 10, 10, 11, 37, 43, 39, DateTimeKind.Utc).AddTicks(9957));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LanguageCode")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<long>("TelegramId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Transfer", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
